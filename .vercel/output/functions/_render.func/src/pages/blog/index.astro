---
import clsx from "clsx";
import H1 from "../../components/h1.astro";
import { formatDate, createSlug } from "../../lib/utils";
import InfoLayout from "../../layouts/InfoLayout.astro";
import { getCollection } from 'astro:content';

// Load all blog entries
const allArticles = await getCollection("articles", ({ data }) => { return data.portfolio === false; });

// Grab all categories (assuming articles have a `category` field in frontmatter)
const categories = Array.from(
  new Set(
    allArticles
      .map((a) => a.data.category)
      .filter(Boolean)
      .map((c) => c.toLowerCase())
  )
);

// Current selected category from query
const selectedCategory = Astro.url.searchParams.get("category")?.toLowerCase() || "all";

// Filter articles by category
const articles = allArticles
  .filter((a) => selectedCategory === "all" || a.data.category?.toLowerCase() === selectedCategory);
---

<InfoLayout>
    <div class="p-4 sm:pt-8 sm:px-12 pb-20 min-h-dvh">
        <H1> Blog </H1>

    <ul class="mt-4 flex items-center gap-4">
      <li>
        <a
          href="/blog"
          class={clsx(
            "w-fit px-4 py-1 text-sm bg-transparent rounded-full transition-all duration-300 ease-in-out",
            selectedCategory === "all"
              ? "text-white bg-zinc-100/20 outline-2 outline-offset-2 outline-zinc-100/20"
              : "text-zinc-400 hover:text-zinc-300"
          )}
        >
          ALL
        </a>
      </li>

      {categories.map((category) => (
        <li>
          <a
            href={`/blog?category=${category}`}
            class={clsx(
              "w-fit px-4 py-1 text-sm bg-transparent rounded-full transition-all duration-300 ease-in-out",
              selectedCategory === category
                ? "text-white bg-zinc-100/20 outline-2 outline-offset-2 outline-zinc-100/20"
                : "text-zinc-400 hover:text-zinc-200"
            )}
          >
            {category.toUpperCase()}
          </a>
        </li>
      ))}
    </ul>

        <ul class="mt-4 space-y-6">
            {
                articles.map((article) => (
                    <li>
                        <a
                            class="space-y-1 group"
                            href={`/blog/${createSlug(article.data.title)}`}
                        >
                            <h2 class="text-xl xl:text-2xl text-zinc-300 group-hover:text-white text-balance font-medium underline group-hover:underline-offset-2 decoration-transparent group-hover:decoration-zinc-500">
                                {article.data.title}
                            </h2>
                            <p class="text-base text-zinc-400">
                                {article.data.snippet}
                            </p>
                            <p class="text-sm text-zinc-500">
                                {formatDate(article.data.pubDate)} &middot;{" "}
                                {article.data.author}
                            </p>
                        </a>
                    </li>
                ))
            }
        </ul>
    </div>
</InfoLayout>
